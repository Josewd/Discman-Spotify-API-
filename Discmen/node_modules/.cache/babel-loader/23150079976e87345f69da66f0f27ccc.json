{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surface pro 5\\\\Desktop\\\\insta-lab-hooks\\\\src\\\\screens\\\\Home.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport FitaCassete from '../components/FitaCassete';\nimport axios from 'axios';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { AssignmentReturnTwoTone } from '@material-ui/icons';\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  background-image: url(${props => props.bkImage});\n  background-repeat: no-repeat;\n  background-size: cover;\n  z-index: 1;\n`;\nconst CoverBackground = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  background: rgb(255,255,255);\nbackground: linear-gradient(0deg, rgba(255,255,255,1) 10%, rgba(255,255,255,0) 95%);\n  z-index: 2;\n\n`;\nconst DivPlaylist = styled.div`\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  min-width: 100vw;\n  max-width: 100vw;\n  height: ${props => props.open ? '150px' : '96px'};\n  box-shadow: 10px 20px 50px rgba(0,0,0,0.2);\n  overflow: hidden;\n  overflow-x: scroll;\n  background-color: #F2EFE4;\n  @media screen and (max-width: 500px){\n   \n    height: ${props => props.open ? '150px' : '86px'};\n   \n    \n}\n`;\nconst BurgerOpen = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 74px;\n  height: 64px;\n  width: 64px;\n`;\nconst TrackDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content:flex-start;\n  \n  width: 100px;\n  height:100% ;\n  cursor: pointer;\n  transition: 3s ease;\n  &:hover{\n    background-color:${props => props.bkColor}\n  }\n`;\nconst AlbumImage = styled.img`\n  border-radius: 50%;\n  margin: 8px;\n  border: 3px solid ${props => props.color ? props.color : 'grey'};\n  animation:spin linear 4s infinite;\n    animation-play-state: ${props => props.animationPlay ? 'running' : 'paused'};\n    @keyframes spin { \n      100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } \n    }\n`;\nconst NameTrack = styled.h3`\n    font-family: 'Caveat', cursive;\n    color: #1B1B1F;\n    margin: auto;\n    margin-left:5px ;\n`;\nconst AudioTrack = styled.audio`\n   filter: invert(100);\n   background-color:none;\n   position: absolute;\n   bottom: 150px;\n   width: 40%;\n   left:30%;\n   outline: none;\n   @media screen and (max-width: 500px){\n    width: 80%;\n    left:10%;\n    bottom: 200px;\n   \n    \n}\n\n\n`;\n\nconst Home = () => {\n  const [tracks, setTracks] = useState([]);\n  const [trackName, setTrackName] = useState('Awesome Playlist');\n  const [artistName, setArtistName] = useState('');\n  const [menu, setMenu] = useState(false);\n  const [previewUrl, setPreview] = useState('');\n  const [animationPlay, setAnimationPlay] = useState(false);\n  const [colors, setColors] = useState(['#41A69C', '#F2C063', '#F24141', '#41A69C', '#F2C063', '#F24141']);\n  const [bkImage, setBkImages] = useState('');\n\n  const getTracks = () => {\n    const urlSpotify = 'https://api.spotify.com/v1/me/tracks';\n    axios.get(urlSpotify, {\n      headers: {\n        Authorization: 'Bearer BQBZCuRqDp9xdFxrCzJsx7Z1iyyHZophUN6QfT5RjtJr6wtOt7Vm8HAt3Q8dMsJYBduh1HQ6upeVWEjeVRz5TVB-SThs7kNzx8tw-5eGlTKH80kRKIGe0EZWRpTcqykvZxkGFkKnc-ZJ5rmnxSKL5R4I12fpZQgNBg9H5DWhZcdxUL9BxGV35fK8UD5Fw_PO1fr_Po9FiuueDFB_kkWs6XdtLDp8ygLw4i6CBlJEn2TuVwkcChnNjZovJkCXom4igWNSFOZuaiI-cXOSuP_ca-ExDoZ46w1xrF4'\n      }\n    }).then(response => {\n      const arrayTracks = response.data.items.map(item => {\n        return {\n          getTrack: item.track.href,\n          trackName: item.track.name,\n          preview: item.track.preview_url,\n          artistName: item.track.artists[0].name,\n          getArtist: item.track.artists[0].href,\n          albumImage: item.track.album.images[2].url,\n          albumImageLarge: item.track.album.images[0].url,\n          getAlbum: item.track.album.href,\n          albumName: item.track.album.name,\n          animationPlay: false\n        };\n      });\n      setTracks(arrayTracks);\n      console.log(arrayTracks);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n\n  useEffect(() => {\n    getTracks();\n  }, []);\n\n  const playtrack = (preview, trackName, artist, bkImage) => {\n    const newTracks = tracks.map(track => {\n      if (track.trackName === trackName) {\n        track.animationPlay = true;\n        setTrackName(trackName);\n        setArtistName(artist);\n        setPreview(preview);\n        setBkImages(bkImage);\n      } else {\n        track.animationPlay = false;\n      }\n\n      return track;\n    });\n    setTracks(newTracks);\n    setAnimationPlay(false);\n  };\n\n  const playNext = track => {\n    const arraytracks = tracks.filter(song => {\n      return song.trackName !== track;\n    });\n    const random = Math.floor(Math.random() * arraytracks.length);\n    const nextTrack = arraytracks;\n  };\n\n  return React.createElement(AppContainer, {\n    bkImage: bkImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(CoverBackground, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(FitaCassete, {\n    animationPlay: animationPlay,\n    songTitle: trackName + ' by ' + artistName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), previewUrl && React.createElement(AudioTrack, {\n    onPlay: () => setAnimationPlay(true),\n    onPause: () => {\n      setAnimationPlay(false);\n    },\n    controls: true,\n    onEnded: () => console.log('acabou'),\n    src: previewUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Your browser does not support the\", React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"AudioTrack\"), \" element.\"), React.createElement(DivPlaylist, {\n    open: menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(TrackDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(BurgerOpen, {\n    onClick: () => setMenu(!menu),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    fontSize: \"enherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })), React.createElement(NameTrack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \"Awesome Playlists\")), tracks && tracks.map(track => {\n    const random = Math.floor(Math.random() * colors.length);\n    return React.createElement(TrackDiv, {\n      bkColor: colors[random],\n      key: track.trackName,\n      onClick: () => playtrack(track.preview, track.trackName, track.artistName, track.albumImageLarge),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(AlbumImage, {\n      color: colors[random],\n      animationPlay: track.animationPlay,\n      src: track.albumImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(NameTrack, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, track.trackName));\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/surface pro 5/Desktop/insta-lab-hooks/src/screens/Home.js"],"names":["React","useState","useEffect","styled","FitaCassete","axios","MenuIcon","AssignmentReturnTwoTone","AppContainer","div","props","bkImage","CoverBackground","DivPlaylist","open","BurgerOpen","TrackDiv","bkColor","AlbumImage","img","color","animationPlay","NameTrack","h3","AudioTrack","audio","Home","tracks","setTracks","trackName","setTrackName","artistName","setArtistName","menu","setMenu","previewUrl","setPreview","setAnimationPlay","colors","setColors","setBkImages","getTracks","urlSpotify","get","headers","Authorization","then","response","arrayTracks","data","items","map","item","getTrack","track","href","name","preview","preview_url","artists","getArtist","albumImage","album","images","url","albumImageLarge","getAlbum","albumName","console","log","catch","error","message","playtrack","artist","newTracks","playNext","arraytracks","filter","song","random","Math","floor","length","nextTrack"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styled from \"styled-components\"\nimport FitaCassete from '../components/FitaCassete';\nimport axios from 'axios'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { AssignmentReturnTwoTone } from '@material-ui/icons';\n\n\n\nconst AppContainer = styled.div `\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  background-image: url(${props=> props.bkImage});\n  background-repeat: no-repeat;\n  background-size: cover;\n  z-index: 1;\n`\nconst CoverBackground = styled.div `\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  background: rgb(255,255,255);\nbackground: linear-gradient(0deg, rgba(255,255,255,1) 10%, rgba(255,255,255,0) 95%);\n  z-index: 2;\n\n`\n\nconst DivPlaylist = styled.div`\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  min-width: 100vw;\n  max-width: 100vw;\n  height: ${props => props.open? '150px': '96px'};\n  box-shadow: 10px 20px 50px rgba(0,0,0,0.2);\n  overflow: hidden;\n  overflow-x: scroll;\n  background-color: #F2EFE4;\n  @media screen and (max-width: 500px){\n   \n    height: ${props => props.open? '150px': '86px'};\n   \n    \n}\n`\nconst BurgerOpen = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 74px;\n  height: 64px;\n  width: 64px;\n`\n\nconst TrackDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content:flex-start;\n  \n  width: 100px;\n  height:100% ;\n  cursor: pointer;\n  transition: 3s ease;\n  &:hover{\n    background-color:${props=>props.bkColor}\n  }\n`\nconst AlbumImage = styled.img`\n  border-radius: 50%;\n  margin: 8px;\n  border: 3px solid ${props=>props.color ? props.color : 'grey'};\n  animation:spin linear 4s infinite;\n    animation-play-state: ${props=>props.animationPlay? 'running': 'paused'};\n    @keyframes spin { \n      100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } \n    }\n`\n\nconst NameTrack = styled.h3`\n    font-family: 'Caveat', cursive;\n    color: #1B1B1F;\n    margin: auto;\n    margin-left:5px ;\n`\nconst AudioTrack = styled.audio`\n   filter: invert(100);\n   background-color:none;\n   position: absolute;\n   bottom: 150px;\n   width: 40%;\n   left:30%;\n   outline: none;\n   @media screen and (max-width: 500px){\n    width: 80%;\n    left:10%;\n    bottom: 200px;\n   \n    \n}\n\n\n`\n\n\nconst Home = () => {\n\n  const [tracks, setTracks]= useState([])\n  const [trackName, setTrackName] = useState('Awesome Playlist')\n  const [artistName, setArtistName] = useState('')\n  const [menu, setMenu] = useState(false)\n  const [previewUrl, setPreview] = useState('')\n  const [animationPlay, setAnimationPlay] = useState(false)\n  const [colors , setColors] = useState(['#41A69C', '#F2C063', '#F24141','#41A69C', '#F2C063', '#F24141'])\n  const [bkImage , setBkImages]= useState('')\n\n  const getTracks = ()=>{\n    const urlSpotify = 'https://api.spotify.com/v1/me/tracks'\n    axios.get(urlSpotify, {\n      headers: {\n        Authorization: 'Bearer BQBZCuRqDp9xdFxrCzJsx7Z1iyyHZophUN6QfT5RjtJr6wtOt7Vm8HAt3Q8dMsJYBduh1HQ6upeVWEjeVRz5TVB-SThs7kNzx8tw-5eGlTKH80kRKIGe0EZWRpTcqykvZxkGFkKnc-ZJ5rmnxSKL5R4I12fpZQgNBg9H5DWhZcdxUL9BxGV35fK8UD5Fw_PO1fr_Po9FiuueDFB_kkWs6XdtLDp8ygLw4i6CBlJEn2TuVwkcChnNjZovJkCXom4igWNSFOZuaiI-cXOSuP_ca-ExDoZ46w1xrF4' \n      }\n    }).then(response=>{\n      \n      const arrayTracks = response.data.items.map(item=>{\n        return {\n          getTrack: item.track.href,\n          trackName: item.track.name,\n          preview: item.track.preview_url,\n          artistName: item.track.artists[0].name,\n          getArtist: item.track.artists[0].href,\n          albumImage: item.track.album.images[2].url,\n          albumImageLarge: item.track.album.images[0].url,\n          getAlbum: item.track.album.href,\n          albumName: item.track.album.name,\n          animationPlay: false\n        }\n      })\n      setTracks(arrayTracks)\n      console.log(arrayTracks)\n    }).catch(error=>{\n      console.log(error.message)\n    })\n  }\n  useEffect(()=>{\n    getTracks()\n  }, [])\n\n  const playtrack = (preview, trackName, artist, bkImage)=>{\n\n    const newTracks = tracks.map(track=>{\n      if(track.trackName === trackName){\n        track.animationPlay = true\n        setTrackName(trackName)\n        setArtistName(artist)\n        setPreview(preview)\n        setBkImages(bkImage)\n      }else{\n        track.animationPlay = false\n      }\n      return track\n    })\n    setTracks(newTracks)\n    setAnimationPlay(false)\n\n  }\n\n  const playNext = (track)=>{\n\n    const arraytracks = tracks.filter(song=>{\n      return song.trackName !== track\n    })\n    const random = Math.floor(Math.random() * arraytracks.length)\n\n    const nextTrack = arraytracks\n\n  }\n\n \n\n   \n\n   \n\n\n\n  return (\n    <AppContainer bkImage={bkImage}>\n      <CoverBackground>\n\n     <FitaCassete animationPlay={animationPlay} songTitle={trackName + ' by ' + artistName}/>\n          {previewUrl && \n          <AudioTrack \n            onPlay={()=> setAnimationPlay(true)}\n            onPause={()=>{setAnimationPlay(false)}}\n            controls\n            onEnded={()=>console.log('acabou')}\n            src={previewUrl}>\n                Your browser does not support the\n                <code>AudioTrack</code> element.\n        </AudioTrack>}\n      \n      <DivPlaylist open={menu} >\n        <TrackDiv>\n        <BurgerOpen onClick={()=> setMenu(!menu) }>\n          <MenuIcon fontSize='enherit'/>\n        </BurgerOpen>\n        <NameTrack>Awesome Playlists</NameTrack>\n        </TrackDiv>\n        {tracks && tracks.map(track=>{\n          const random = Math.floor(Math.random() * colors.length)\n          return <TrackDiv bkColor={colors[random]} \n                  key={track.trackName}\n                  onClick={()=>playtrack(track.preview, track.trackName, track.artistName, track.albumImageLarge)}>\n            <AlbumImage color={colors[random]} animationPlay={track.animationPlay} src={track.albumImage}/>\n            <NameTrack>{track.trackName}</NameTrack>\n          </TrackDiv>\n        })}\n      </DivPlaylist>\n      </CoverBackground>\n    </AppContainer>\n  );\n}\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}