{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surface pro 5\\\\Desktop\\\\insta-lab-hooks\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport FitaCassete from './components/FitaCassete';\nimport axios from 'axios';\nimport MenuIcon from '@material-ui/icons/Menu';\nconst AppContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\nconst DivPlaylist = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  left: 5px;\n  top: 0px;\n  max-height: 100vh;\n  min-height: max-content;\n  width: ${props => props.open ? '350px' : '86px'};\n  box-shadow: 10px 20px 50px rgba(0,0,0,0.2);\n  overflow: hidden;\n  overflow-y: scroll;\n`;\nconst BurgerOpen = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 74px;\n  height: 64px;\n  width: 64px;\n`;\nconst TrackDiv = styled.div`\n  display: flex;\n  align-items: center;\n  margin: auto;\n  width: 320px;\n  height:70px ;\n  cursor: pointer;\n  transition: 3s ease;\n  &:hover{\n    background-color:grey ;\n  }\n`;\nconst AlbumImage = styled.img`\n  border-radius: 50%;\n  margin: 3px;\n  animation:spin linear 4s infinite;\n    animation-play-state: ${props => props.animationPlay ? 'running' : 'paused'};\n    @keyframes spin { \n      100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } \n    }\n`;\nconst NameTrack = styled.h3`\n    font-family: 'Caveat', cursive;\n    color: #1B1B1F;\n    margin: auto;\n    margin-left:5px ;\n`;\n\nconst App = () => {\n  const [tracks, setTracks] = useState([]);\n  const [trackName, setTrackName] = useState('Awesome Playlist');\n  const [artistName, setArtistName] = useState('');\n  const [menu, setMenu] = useState(false);\n  const [preview, setPreview] = useState();\n\n  const getTracks = () => {\n    const urlSpotify = 'https://api.spotify.com/v1/me/tracks';\n    axios.get(urlSpotify, {\n      headers: {\n        Authorization: 'Bearer BQAugkPFAy2H0qirHg1nTZz0gB-0xdYdG9ClOPiezunZ9JZknUON62gg-Xt-ZC4TdbYa2Rc3UicNS8B-4WuPhb0-wlIi32lXyKfQ4lLvJe7HNE140f7gPTxQftPL-KIDGgRttvwa4r0CrXgHPIJ6YE6I7KKl7hcCIz3fE-h5hjuq_KTHiX77KlodmRB8MpTlu1KiZCFzH_1wAHL2GqiYY0LYyedhAYsh5hc3VQPa0EBkgErQFLWKK_a-B4TJ7-pWinBg6k74PwO6R_1AVHCZPhgmoeu8z9ETGEQ'\n      }\n    }).then(response => {\n      const arrayTracks = response.data.items.map(item => {\n        return {\n          getTrack: item.track.href,\n          trackName: item.track.name,\n          preview: item.track.preview_url,\n          artistName: item.track.artists[0].name,\n          getArtist: item.track.artists[0].href,\n          albumImage: item.track.album.images[2].url,\n          getAlbum: item.track.album.href,\n          albumName: item.track.album.name,\n          animationPlay: false\n        };\n      });\n      setTracks(arrayTracks);\n      console.log(arrayTracks);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n\n  useEffect(() => {\n    getTracks();\n  }, []);\n\n  const playtrack = (preview, trackName, artist) => {\n    const newTracks = tracks.map(track => {\n      if (track.trackName === trackName) {\n        track.animationPlay = true;\n      } else {\n        track.animationPlay = false;\n      }\n\n      return track;\n    });\n    setTracks(newTracks);\n    setTrackName(trackName);\n    setArtistName(artist);\n  };\n\n  return React.createElement(AppContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(DivPlaylist, {\n    open: menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(TrackDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(BurgerOpen, {\n    onClick: () => setMenu(!menu),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    fontSize: \"enherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(NameTrack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Awesome Playlists\")), tracks && tracks.map(track => {\n    return React.createElement(TrackDiv, {\n      key: track.trackName,\n      onClick: () => playtrack(track.preview, track.trackName, track.artistName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(AlbumImage, {\n      animationPlay: track.animationPlay,\n      src: track.albumImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(NameTrack, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, track.trackName, \" by: \", track.artistName));\n  })), React.createElement(FitaCassete, {\n    songTitle: trackName + ' by ' + artistName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/surface pro 5/Desktop/insta-lab-hooks/src/App.js"],"names":["React","useState","useEffect","styled","FitaCassete","axios","MenuIcon","AppContainer","div","DivPlaylist","props","open","BurgerOpen","TrackDiv","AlbumImage","img","animationPlay","NameTrack","h3","App","tracks","setTracks","trackName","setTrackName","artistName","setArtistName","menu","setMenu","preview","setPreview","getTracks","urlSpotify","get","headers","Authorization","then","response","arrayTracks","data","items","map","item","getTrack","track","href","name","preview_url","artists","getArtist","albumImage","album","images","url","getAlbum","albumName","console","log","catch","error","message","playtrack","artist","newTracks"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAIA,MAAMC,YAAY,GAAGJ,MAAM,CAACK,GAAK;;;;;CAAjC;AAOA,MAAMC,WAAW,GAAGN,MAAM,CAACK,GAAI;;;;;;;;;;WAUpBE,KAAK,IAAIA,KAAK,CAACC,IAAN,GAAY,OAAZ,GAAqB,MAAO;;;;CAVhD;AAeA,MAAMC,UAAU,GAAGT,MAAM,CAACK,GAAI;;;;;;;CAA9B;AASA,MAAMK,QAAQ,GAAGV,MAAM,CAACK,GAAI;;;;;;;;;;;CAA5B;AAYA,MAAMM,UAAU,GAAGX,MAAM,CAACY,GAAI;;;;4BAIFL,KAAK,IAAEA,KAAK,CAACM,aAAN,GAAqB,SAArB,GAAgC,QAAS;;;;CAJ5E;AAUA,MAAMC,SAAS,GAAGd,MAAM,CAACe,EAAG;;;;;CAA5B;;AAQA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBpB,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,kBAAD,CAA1C;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACyB,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,EAAtC;;AAEA,QAAM6B,SAAS,GAAG,MAAI;AACpB,UAAMC,UAAU,GAAG,sCAAnB;AACA1B,IAAAA,KAAK,CAAC2B,GAAN,CAAUD,UAAV,EAAsB;AACpBE,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE;AADR;AADW,KAAtB,EAIGC,IAJH,CAIQC,QAAQ,IAAE;AAEhB,YAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,GAApB,CAAwBC,IAAI,IAAE;AAChD,eAAO;AACLC,UAAAA,QAAQ,EAAED,IAAI,CAACE,KAAL,CAAWC,IADhB;AAELtB,UAAAA,SAAS,EAAEmB,IAAI,CAACE,KAAL,CAAWE,IAFjB;AAGLjB,UAAAA,OAAO,EAAEa,IAAI,CAACE,KAAL,CAAWG,WAHf;AAILtB,UAAAA,UAAU,EAAEiB,IAAI,CAACE,KAAL,CAAWI,OAAX,CAAmB,CAAnB,EAAsBF,IAJ7B;AAKLG,UAAAA,SAAS,EAAEP,IAAI,CAACE,KAAL,CAAWI,OAAX,CAAmB,CAAnB,EAAsBH,IAL5B;AAMLK,UAAAA,UAAU,EAAER,IAAI,CAACE,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwB,CAAxB,EAA2BC,GANlC;AAOLC,UAAAA,QAAQ,EAAEZ,IAAI,CAACE,KAAL,CAAWO,KAAX,CAAiBN,IAPtB;AAQLU,UAAAA,SAAS,EAAEb,IAAI,CAACE,KAAL,CAAWO,KAAX,CAAiBL,IARvB;AASL7B,UAAAA,aAAa,EAAE;AATV,SAAP;AAWD,OAZmB,CAApB;AAaAK,MAAAA,SAAS,CAACgB,WAAD,CAAT;AACAkB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,WAAZ;AACD,KArBD,EAqBGoB,KArBH,CAqBSC,KAAK,IAAE;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACC,OAAlB;AACD,KAvBD;AAwBD,GA1BD;;AA2BAzD,EAAAA,SAAS,CAAC,MAAI;AACZ4B,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAM8B,SAAS,GAAG,CAAChC,OAAD,EAAUN,SAAV,EAAqBuC,MAArB,KAA8B;AAE9C,UAAMC,SAAS,GAAG1C,MAAM,CAACoB,GAAP,CAAWG,KAAK,IAAE;AAClC,UAAGA,KAAK,CAACrB,SAAN,KAAoBA,SAAvB,EAAiC;AAC/BqB,QAAAA,KAAK,CAAC3B,aAAN,GAAsB,IAAtB;AACD,OAFD,MAEK;AACH2B,QAAAA,KAAK,CAAC3B,aAAN,GAAsB,KAAtB;AACD;;AACD,aAAO2B,KAAP;AACD,KAPiB,CAAlB;AAQAtB,IAAAA,SAAS,CAACyC,SAAD,CAAT;AACAvC,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAG,IAAAA,aAAa,CAACoC,MAAD,CAAb;AAED,GAdD;;AAiBA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEnC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAKC,OAAO,CAAC,CAACD,IAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,EAIA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJA,CADF,EAOGN,MAAM,IAAIA,MAAM,CAACoB,GAAP,CAAWG,KAAK,IAAE;AAC3B,WAAO,oBAAC,QAAD;AACC,MAAA,GAAG,EAAEA,KAAK,CAACrB,SADZ;AAEC,MAAA,OAAO,EAAE,MAAIsC,SAAS,CAACjB,KAAK,CAACf,OAAP,EAAgBe,KAAK,CAACrB,SAAtB,EAAiCqB,KAAK,CAACnB,UAAvC,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGL,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAEmB,KAAK,CAAC3B,aAAjC;AAAgD,MAAA,GAAG,EAAE2B,KAAK,CAACM,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHK,EAIL,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYN,KAAK,CAACrB,SAAlB,WAAkCqB,KAAK,CAACnB,UAAxC,CAJK,CAAP;AAMD,GAPU,CAPb,CADF,EAiBC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEF,SAAS,GAAG,MAAZ,GAAqBE,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBD,CADF;AAsBD,CA9ED;;AAiFA,eAAeL,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport styled from \"styled-components\"\nimport FitaCassete from './components/FitaCassete';\nimport axios from 'axios'\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\n\nconst AppContainer = styled.div `\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`\n\nconst DivPlaylist = styled.div`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  left: 5px;\n  top: 0px;\n  max-height: 100vh;\n  min-height: max-content;\n  width: ${props => props.open? '350px': '86px'};\n  box-shadow: 10px 20px 50px rgba(0,0,0,0.2);\n  overflow: hidden;\n  overflow-y: scroll;\n`\nconst BurgerOpen = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 74px;\n  height: 64px;\n  width: 64px;\n`\n\nconst TrackDiv = styled.div`\n  display: flex;\n  align-items: center;\n  margin: auto;\n  width: 320px;\n  height:70px ;\n  cursor: pointer;\n  transition: 3s ease;\n  &:hover{\n    background-color:grey ;\n  }\n`\nconst AlbumImage = styled.img`\n  border-radius: 50%;\n  margin: 3px;\n  animation:spin linear 4s infinite;\n    animation-play-state: ${props=>props.animationPlay? 'running': 'paused'};\n    @keyframes spin { \n      100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } \n    }\n`\n\nconst NameTrack = styled.h3`\n    font-family: 'Caveat', cursive;\n    color: #1B1B1F;\n    margin: auto;\n    margin-left:5px ;\n`\n\n\nconst App = () => {\n\n  const [tracks, setTracks]= useState([])\n  const [trackName, setTrackName] = useState('Awesome Playlist')\n  const [artistName, setArtistName] = useState('')\n  const [menu, setMenu] = useState(false)\n  const [preview, setPreview] = useState()\n\n  const getTracks = ()=>{\n    const urlSpotify = 'https://api.spotify.com/v1/me/tracks'\n    axios.get(urlSpotify, {\n      headers: {\n        Authorization: 'Bearer BQAugkPFAy2H0qirHg1nTZz0gB-0xdYdG9ClOPiezunZ9JZknUON62gg-Xt-ZC4TdbYa2Rc3UicNS8B-4WuPhb0-wlIi32lXyKfQ4lLvJe7HNE140f7gPTxQftPL-KIDGgRttvwa4r0CrXgHPIJ6YE6I7KKl7hcCIz3fE-h5hjuq_KTHiX77KlodmRB8MpTlu1KiZCFzH_1wAHL2GqiYY0LYyedhAYsh5hc3VQPa0EBkgErQFLWKK_a-B4TJ7-pWinBg6k74PwO6R_1AVHCZPhgmoeu8z9ETGEQ' \n      }\n    }).then(response=>{\n      \n      const arrayTracks = response.data.items.map(item=>{\n        return {\n          getTrack: item.track.href,\n          trackName: item.track.name,\n          preview: item.track.preview_url,\n          artistName: item.track.artists[0].name,\n          getArtist: item.track.artists[0].href,\n          albumImage: item.track.album.images[2].url,\n          getAlbum: item.track.album.href,\n          albumName: item.track.album.name,\n          animationPlay: false\n        }\n      })\n      setTracks(arrayTracks)\n      console.log(arrayTracks)\n    }).catch(error=>{\n      console.log(error.message)\n    })\n  }\n  useEffect(()=>{\n    getTracks()\n  }, [])\n\n  const playtrack = (preview, trackName, artist)=>{\n\n    const newTracks = tracks.map(track=>{\n      if(track.trackName === trackName){\n        track.animationPlay = true\n      }else{\n        track.animationPlay = false\n      }\n      return track\n    })\n    setTracks(newTracks)\n    setTrackName(trackName)\n    setArtistName(artist)\n\n  }\n\n\n  return (\n    <AppContainer>\n      <DivPlaylist open={menu} >\n        <TrackDiv>\n        <BurgerOpen onClick={()=> setMenu(!menu) }>\n          <MenuIcon fontSize='enherit'/>\n        </BurgerOpen>\n        <NameTrack>Awesome Playlists</NameTrack>\n        </TrackDiv>\n        {tracks && tracks.map(track=>{\n          return <TrackDiv \n                  key={track.trackName}\n                  onClick={()=>playtrack(track.preview, track.trackName, track.artistName)}>\n            <AlbumImage animationPlay={track.animationPlay} src={track.albumImage}/>\n            <NameTrack>{track.trackName} by: {track.artistName}</NameTrack>\n          </TrackDiv>\n        })}\n      </DivPlaylist>\n     <FitaCassete songTitle={trackName + ' by ' + artistName}/>\n      \n    </AppContainer>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}