{"version":3,"sources":["components/FitaCassete.js","screens/Home.js","serviceWorker.js","index.js","App.js"],"names":["DivCassete","styled","div","DivCircleAnimationLeft","props","animationPlay","DivCircleAnimationRight","DivStamp","DivAnimation","Divglass","DivCasseteBottom","Circle","DivCircle","DivLine","bkColor","height","SongTitle","h1","FitaCassete","draggable","fontSize","songTitle","AppContainer","bkImage","CoverBackground","DivPlaylist","open","BurgerOpen","TrackDiv","AlbumImage","img","color","NameTrack","h3","AudioTrack","audio","Home","useState","tracks","setTracks","trackName","setTrackName","artistName","setArtistName","menu","setMenu","previewUrl","setPreview","setAnimationPlay","colors","setBkImages","useEffect","axios","get","headers","Authorization","then","response","arrayTracks","data","items","map","item","getTrack","track","href","name","preview","preview_url","artists","getArtist","albumImage","album","images","url","albumImageLarge","getAlbum","albumName","console","log","catch","error","message","playtrack","artist","newTracks","autoPlay","onPlay","onPause","controls","onEnded","arraytracks","filter","song","nextTrack","Math","floor","random","length","playNext","src","onClick","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac099e22.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\"\r\nimport BrightnessLowRoundedIcon from '@material-ui/icons/BrightnessLowRounded';\r\n\r\n\r\nconst DivCassete = styled.div`\r\n  \r\n  background-color: #1B1B1F;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  border-radius: 20px;\r\n  height: 350px;\r\n  width: 550px;\r\n  margin: auto;\r\n  margin-top: 200px;\r\n  box-shadow: 0px 50px 20px rgba(0,0,0,0.2);\r\n  @media screen and (max-width: 500px){\r\n      width:350px;\r\n      height: 250px;\r\n  }\r\n`\r\nconst DivCircleAnimationLeft = styled.div`\r\n\r\n    font-size: 100px;\r\n    height: 90px;\r\n    width: 90px;\r\n    border-radius: 50%;\r\n    border: 40px solid #1B1B1F;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: -25px;\r\n    margin-left: -15px;\r\n    animation:spin linear 4s infinite;\r\n    animation-play-state: ${props=>props.animationPlay? 'running': 'paused'};\r\n    @keyframes spin { \r\n      100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } \r\n    }\r\n    @media screen and (max-width: 500px){\r\n      \r\n        font-size: 70px;\r\n    height: 60px;\r\n    width: 60px;\r\n    border-radius: 50%;\r\n    border: 30px solid #1B1B1F;\r\n      \r\n  }\r\n\r\n`\r\nconst DivCircleAnimationRight = styled(DivCircleAnimationLeft)`\r\n\r\n    font-size: 100px;\r\n    height: 90px;\r\n    width: 90px;\r\n    border-radius: 50%;\r\n    border: 30px solid #1B1B1F;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: -8px;\r\n    margin-top: -8px;\r\n    @media screen and (max-width: 500px){\r\n      \r\n      font-size: 70px;\r\n  height: 60px;\r\n  width: 60px;\r\n  border-radius: 50%;\r\n  border: 20px solid #1B1B1F;\r\n    \r\n}\r\n\r\n`\r\n\r\nconst DivStamp = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  height: 300px;\r\n  width: 95%;\r\n  margin: auto;\r\n  margin-top: 30px;\r\n  background-color: #F2EFE4;\r\n  border-radius: 20px;\r\n  z-index: 2;\r\n  overflow: hidden;\r\n  @media screen and (max-width: 500px){\r\n      \r\n      height: 200px;\r\n  }\r\n`\r\nconst DivAnimation = styled.div`\r\n\r\n  width: 75%;\r\n  margin: auto;\r\n  height: 55%;\r\n  position: absolute;\r\n  top: 60px;\r\n  right: 70px;\r\n  background-color:#F2EFE4;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 500px){\r\n      \r\n      right: 45px;\r\n      top: 50px;\r\n      \r\n  }\r\n  \r\n\r\n`\r\nconst Divglass = styled.div`\r\n\r\n  width: 75%;\r\n  margin: auto;\r\n  height: 55%;\r\n  position: absolute;\r\n  top: 60px;\r\n  right: 70px;\r\n  background-color: rgba(65,164,165, 0.5);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  z-index: 4;\r\n  @media screen and (max-width: 500px){\r\n      \r\n      right: 45px;\r\n      top: 50px;\r\n      \r\n  }\r\n  \r\n`\r\n\r\n\r\n\r\nconst DivCasseteBottom = styled.div`\r\n  width: 60%;\r\n  margin: auto;\r\n  background-color:#1B1B1F;\r\n \r\n  height: 25%;\r\n  border-left: 60px solid #1B1B1F;\r\n  border-right: 60px solid #1B1B1F;\r\n  border-bottom: 60px solid #202020;\r\n  border-top: 0px solid black;\r\n  margin-top:-30px;\r\n  margin-bottom: 10px;\r\n  z-index: 1;\r\n`\r\nconst Circle = styled.div`\r\n\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 50%;\r\n  background-color: #4D4D59;\r\n\r\n`\r\nconst DivCircle = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 14px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  z-index: 3; \r\n`\r\nconst DivLine = styled.div`\r\n\r\n    background-color: ${props=> props.bkColor};\r\n    height: ${props=>props.height};\r\n    margin-top: 2px;\r\n\r\n`\r\nconst SongTitle = styled.h1`\r\n    font-family: 'Caveat', cursive;\r\n    color: blue;\r\n    margin: auto;\r\n    \r\n`\r\n\r\nconst FitaCassete = (props) => {\r\n  return (\r\n      <DivCassete draggable='true'>\r\n            <DivStamp>\r\n                <Divglass/>\r\n                <DivAnimation>\r\n                    <DivCircleAnimationLeft animationPlay={props.animationPlay} >\r\n                        <BrightnessLowRoundedIcon fontSize='inherit'/>\r\n                    </DivCircleAnimationLeft>\r\n                    <DivCircleAnimationRight animationPlay={props.animationPlay}>\r\n                        <BrightnessLowRoundedIcon fontSize='inherit'/>\r\n                    </DivCircleAnimationRight>\r\n                </DivAnimation>\r\n                <DivLine bkColor='#F24141' height='20%'/>\r\n                <DivLine bkColor='#F24141' height='15%'/>\r\n                <DivLine bkColor='#F2C063' height='15%'/>\r\n                <DivLine bkColor='#F2C063' height='10%'/>\r\n                <DivLine bkColor='#41A69C' height='10%'/>\r\n                <DivLine bkColor='#41A69C' height='5%'/>\r\n                <SongTitle>{props.songTitle}</SongTitle>\r\n            </DivStamp>\r\n            <DivCasseteBottom></DivCasseteBottom>\r\n            <DivCircle>\r\n                <Circle/>\r\n                <Circle/>\r\n                <Circle/>\r\n            </DivCircle>\r\n      </DivCassete>\r\n  );\r\n}\r\n\r\n\r\nexport default FitaCassete;\r\n","import React, {useState, useEffect} from 'react';\nimport styled from \"styled-components\"\nimport FitaCassete from '../components/FitaCassete';\nimport axios from 'axios'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { AssignmentReturnTwoTone } from '@material-ui/icons';\n\n\n\nconst AppContainer = styled.div `\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  background-image: url(${props=> props.bkImage});\n  background-repeat: no-repeat;\n  background-size: cover;\n  z-index: 1;\n`\nconst CoverBackground = styled.div `\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: flex-start;\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  background: rgb(255,255,255);\nbackground: linear-gradient(0deg, rgba(255,255,255,1) 10%, rgba(255,255,255,0) 95%);\n  z-index: 2;\n\n`\n\nconst DivPlaylist = styled.div`\n\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  min-width: 100vw;\n  max-width: 100vw;\n  height: ${props => props.open? '150px': '96px'};\n  box-shadow: 10px 20px 50px rgba(0,0,0,0.2);\n  overflow: hidden;\n  overflow-x: scroll;\n  background-color: #F2EFE4;\n  @media screen and (max-width: 500px){\n   \n    height: ${props => props.open? '150px': '86px'};\n   \n    \n}\n`\nconst BurgerOpen = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 74px;\n  height: 64px;\n  width: 64px;\n`\n\nconst TrackDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content:flex-start;\n  \n  width: 100px;\n  height:100% ;\n  cursor: pointer;\n  transition: 3s ease;\n  &:hover{\n    background-color:${props=>props.bkColor}\n  }\n`\nconst AlbumImage = styled.img`\n  border-radius: 50%;\n  margin: 8px;\n  border: 3px solid ${props=>props.color ? props.color : 'grey'};\n  animation:spin linear 4s infinite;\n    animation-play-state: ${props=>props.animationPlay? 'running': 'paused'};\n    @keyframes spin { \n      100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } \n    }\n`\n\nconst NameTrack = styled.h3`\n    font-family: 'Caveat', cursive;\n    color: #1B1B1F;\n    margin: auto;\n    margin-left:5px ;\n`\nconst AudioTrack = styled.audio`\n   filter: invert(100);\n   background-color:none;\n   position: absolute;\n   bottom: 150px;\n   width: 40%;\n   left:30%;\n   outline: none;\n   @media screen and (max-width: 500px){\n    width: 80%;\n    left:10%;\n    bottom: 200px;\n   \n    \n}\n\n\n`\n\n\nconst Home = () => {\n\n  const [tracks, setTracks]= useState([])\n  const [trackName, setTrackName] = useState('Awesome Playlist')\n  const [artistName, setArtistName] = useState('')\n  const [menu, setMenu] = useState(false)\n  const [previewUrl, setPreview] = useState('')\n  const [animationPlay, setAnimationPlay] = useState(false)\n  const [colors , setColors] = useState(['#41A69C', '#F2C063', '#F24141','#41A69C', '#F2C063', '#F24141'])\n  const [bkImage , setBkImages]= useState('')\n\n  const getTracks = ()=>{\n    const urlSpotify = 'https://api.spotify.com/v1/me/tracks'\n    axios.get(urlSpotify, {\n      headers: {\n        Authorization: 'Bearer BQDHIKnPVE26FfE4YMbfc_oLK-ar5DXgUMV3iutT7D2ihC79NK_gkdpU721LHkY7APdJICGp-4XMuxADDGcrWE9feiqXVYtUUe9I9Kp2_VqAJn7dgVWTLEKTJ5Eq68opppbkXd1DoODd60C8mjCvGEV90W8EJE3RPDLMT_5Mg6Vw_3YMYXEEuf0yMP05HRYSa4U-IyGN8VdF50zrd_tUrtovDm_sD-QOErDDJ2Pd0lIxj0E6rnnQNOzs_-vvmnvlvNLw64J2HBeOyTumBbCCpxejACVGwaNZ3kI' \n      }\n    }).then(response=>{\n      \n      const arrayTracks = response.data.items.map(item=>{\n        return {\n          getTrack: item.track.href,\n          trackName: item.track.name,\n          preview: item.track.preview_url,\n          artistName: item.track.artists[0].name,\n          getArtist: item.track.artists[0].href,\n          albumImage: item.track.album.images[2].url,\n          albumImageLarge: item.track.album.images[0].url,\n          getAlbum: item.track.album.href,\n          albumName: item.track.album.name,\n          animationPlay: false\n        }\n      })\n      setTracks(arrayTracks)\n      console.log(arrayTracks)\n    }).catch(error=>{\n      console.log(error.message)\n    })\n  }\n  useEffect(()=>{\n    getTracks()\n  }, [])\n\n  const playtrack = (preview, trackName, artist, bkImage)=>{\n\n    const newTracks = tracks.map(track=>{\n      if(track.trackName === trackName){\n        track.animationPlay = true\n        setTrackName(trackName)\n        setArtistName(artist)\n        setPreview(preview)\n        setBkImages(bkImage)\n      }else{\n        track.animationPlay = false\n      }\n      return track\n    })\n    setTracks(newTracks)\n    setAnimationPlay(false)\n\n  }\n\n  const playNext = (track)=>{\n\n    const arraytracks = tracks.filter(song=>{\n      return song.trackName !== track\n    })\n    const random = Math.floor(Math.random() * arraytracks.length)\n\n    const nextTrack = arraytracks[random]\n    playtrack(nextTrack.preview, nextTrack.trackName, nextTrack.artistName, nextTrack.albumImageLarge)\n\n  }\n\n \n\n   \n\n   \n\n\n\n  return (\n    <AppContainer bkImage={bkImage}>\n      <CoverBackground>\n\n     <FitaCassete animationPlay={animationPlay} songTitle={trackName + ' by ' + artistName}/>\n          {previewUrl && \n          <AudioTrack \n            autoPlay='true'\n            onPlay={()=> setAnimationPlay(true)}\n            onPause={()=>{setAnimationPlay(false)}}\n            controls\n            onEnded={()=>playNext(trackName)}\n            src={previewUrl}>\n                Your browser does not support the\n                <code>AudioTrack</code> element.\n        </AudioTrack>}\n      \n      <DivPlaylist open={menu} >\n        <TrackDiv>\n        <BurgerOpen onClick={()=> setMenu(!menu) }>\n          <MenuIcon fontSize='enherit'/>\n        </BurgerOpen>\n        <NameTrack>Awesome Playlists</NameTrack>\n        </TrackDiv>\n        {tracks && tracks.map(track=>{\n          const random = Math.floor(Math.random() * colors.length)\n          return <TrackDiv bkColor={colors[random]} \n                  key={track.trackName}\n                  onClick={()=>playtrack(track.preview, track.trackName, track.artistName, track.albumImageLarge)}>\n            <AlbumImage color={colors[random]} animationPlay={track.animationPlay} src={track.albumImage}/>\n            <NameTrack>{track.trackName}</NameTrack>\n          </TrackDiv>\n        })}\n      </DivPlaylist>\n      </CoverBackground>\n    </AppContainer>\n  );\n}\n\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\r\nimport Home from './screens/Home'\r\n\r\n\r\n\r\n\r\nexport default function App (props){\r\n\r\n\r\n    return <div>\r\n        <Home/>\r\n    </div>\r\n}"],"sourceRoot":""}